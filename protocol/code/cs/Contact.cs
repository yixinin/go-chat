// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: contact.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protocol {

  /// <summary>Holder for reflection information generated from contact.proto</summary>
  public static partial class ContactReflection {

    #region Descriptor
    /// <summary>File descriptor for contact.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ContactReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1jb250YWN0LnByb3RvEghwcm90b2NvbBoMaGVhZGVyLnByb3RvIkEKDVNl",
            "YXJjaFVzZXJSZXESIwoGaGVhZGVyGAEgASgLMhMucHJvdG9jb2wuUmVxSGVh",
            "ZGVyEgsKA2tleRgCIAEoCSK0AQoNU2VhcmNoVXNlckFjaxIjCgZoZWFkZXIY",
            "ASABKAsyEy5wcm90b2NvbC5BY2tIZWFkZXISEAoIcGFnZVNpemUYAiABKAkS",
            "LgoEZGF0YRgDIAMoCzIgLnByb3RvY29sLlNlYXJjaFVzZXJBY2suRGF0YUl0",
            "ZW0aPAoIRGF0YUl0ZW0SDgoGdXNlcklkGAEgASgDEhAKCG5pY2tuYW1lGAIg",
            "ASgJEg4KBmF2YXRhchgDIAEoCSKsAQoNQWRkQ29udGFjdFJlcRIjCgZoZWFk",
            "ZXIYASABKAsyEy5wcm90b2NvbC5SZXFIZWFkZXISDgoGYXV0aElkGAYgASgD",
            "EgsKA2FkZBgIIAEoCBIOCgZ1c2VySWQYAiABKAMSEwoLY29udGFjdFR5cGUY",
            "AyABKAUSEgoKc2V0UmVtYXJrcxgEIAEoCRILCgNtc2cYBSABKAkSEwoLZnJv",
            "bUdyb3VwSWQYByABKAMiNAoNQWRkQ29udGFjdEFjaxIjCgZoZWFkZXIYASAB",
            "KAsyEy5wcm90b2NvbC5BY2tIZWFkZXIioAEKEEFkZENvbnRhY3ROb3RpZnkS",
            "IwoGaGVhZGVyGAEgASgLMhMucHJvdG9jb2wuUmVxSGVhZGVyEg4KBmF1dGhJ",
            "ZBgCIAEoAxIQCghuaWNrbmFtZRgDIAEoCRIOCgZhdmF0YXIYBCABKAkSCwoD",
            "bXNnGAUgASgJEhMKC2Zyb21Hcm91cElkGAcgASgDEhMKC2NvbnRhY3RUeXBl",
            "GAggASgFIkoKEERlbGV0ZUNvbnRhY3RSZXESIwoGaGVhZGVyGAEgASgLMhMu",
            "cHJvdG9jb2wuUmVxSGVhZGVyEhEKCWNvbnRhY3RJZBgCIAEoAyI3ChBEZWxl",
            "dGVDb250YWN0QWNrEiMKBmhlYWRlchgBIAEoCzITLnByb3RvY29sLkFja0hl",
            "YWRlciJeChBVcGRhdGVDb250YWN0UmVxEiMKBmhlYWRlchgBIAEoCzITLnBy",
            "b3RvY29sLlJlcUhlYWRlchISCgpzZXRSZW1hcmtzGAIgASgJEhEKCWNvbnRh",
            "Y3RJZBgDIAEoAyI3ChBVcGRhdGVDb250YWN0QWNrEiMKBmhlYWRlchgBIAEo",
            "CzITLnByb3RvY29sLkFja0hlYWRlciI4ChFHZXRDb250YWN0TGlzdFJlcRIj",
            "CgZoZWFkZXIYASABKAsyEy5wcm90b2NvbC5SZXFIZWFkZXIi0AEKEUdldENv",
            "bnRhY3RMaXN0QWNrEiMKBmhlYWRlchgBIAEoCzITLnByb3RvY29sLkFja0hl",
            "YWRlchI1Cghjb250YWN0cxgCIAMoCzIjLnByb3RvY29sLkdldENvbnRhY3RM",
            "aXN0QWNrLkNvbnRhY3QaXwoHQ29udGFjdBIQCghuaWNrbmFtZRgBIAEoCRIO",
            "CgZhdmF0YXIYAiABKAkSEQoJY29udGFjdElkGAMgASgDEg8KB3JlbWFya3MY",
            "BCABKAkSDgoGdXNlcklkGAUgASgDYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protocol.HeaderReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.SearchUserReq), global::Protocol.SearchUserReq.Parser, new[]{ "Header", "Key" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.SearchUserAck), global::Protocol.SearchUserAck.Parser, new[]{ "Header", "PageSize", "Data" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.SearchUserAck.Types.DataItem), global::Protocol.SearchUserAck.Types.DataItem.Parser, new[]{ "UserId", "Nickname", "Avatar" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.AddContactReq), global::Protocol.AddContactReq.Parser, new[]{ "Header", "AuthId", "Add", "UserId", "ContactType", "SetRemarks", "Msg", "FromGroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.AddContactAck), global::Protocol.AddContactAck.Parser, new[]{ "Header" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.AddContactNotify), global::Protocol.AddContactNotify.Parser, new[]{ "Header", "AuthId", "Nickname", "Avatar", "Msg", "FromGroupId", "ContactType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.DeleteContactReq), global::Protocol.DeleteContactReq.Parser, new[]{ "Header", "ContactId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.DeleteContactAck), global::Protocol.DeleteContactAck.Parser, new[]{ "Header" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.UpdateContactReq), global::Protocol.UpdateContactReq.Parser, new[]{ "Header", "SetRemarks", "ContactId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.UpdateContactAck), global::Protocol.UpdateContactAck.Parser, new[]{ "Header" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.GetContactListReq), global::Protocol.GetContactListReq.Parser, new[]{ "Header" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.GetContactListAck), global::Protocol.GetContactListAck.Parser, new[]{ "Header", "Contacts" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.GetContactListAck.Types.Contact), global::Protocol.GetContactListAck.Types.Contact.Parser, new[]{ "Nickname", "Avatar", "ContactId", "Remarks", "UserId" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SearchUserReq : pb::IMessage<SearchUserReq> {
    private static readonly pb::MessageParser<SearchUserReq> _parser = new pb::MessageParser<SearchUserReq>(() => new SearchUserReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchUserReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ContactReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchUserReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchUserReq(SearchUserReq other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchUserReq Clone() {
      return new SearchUserReq(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Protocol.ReqHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.ReqHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchUserReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchUserReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchUserReq other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Protocol.ReqHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Protocol.ReqHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchUserAck : pb::IMessage<SearchUserAck> {
    private static readonly pb::MessageParser<SearchUserAck> _parser = new pb::MessageParser<SearchUserAck>(() => new SearchUserAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchUserAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ContactReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchUserAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchUserAck(SearchUserAck other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      pageSize_ = other.pageSize_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchUserAck Clone() {
      return new SearchUserAck(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Protocol.AckHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.AckHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "pageSize" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private string pageSize_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Protocol.SearchUserAck.Types.DataItem> _repeated_data_codec
        = pb::FieldCodec.ForMessage(26, global::Protocol.SearchUserAck.Types.DataItem.Parser);
    private readonly pbc::RepeatedField<global::Protocol.SearchUserAck.Types.DataItem> data_ = new pbc::RepeatedField<global::Protocol.SearchUserAck.Types.DataItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.SearchUserAck.Types.DataItem> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchUserAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchUserAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (PageSize != other.PageSize) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (PageSize.Length != 0) hash ^= PageSize.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (PageSize.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageSize);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (PageSize.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageSize);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchUserAck other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Protocol.AckHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.PageSize.Length != 0) {
        PageSize = other.PageSize;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Protocol.AckHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            PageSize = input.ReadString();
            break;
          }
          case 26: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SearchUserAck message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class DataItem : pb::IMessage<DataItem> {
        private static readonly pb::MessageParser<DataItem> _parser = new pb::MessageParser<DataItem>(() => new DataItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DataItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Protocol.SearchUserAck.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataItem(DataItem other) : this() {
          userId_ = other.userId_;
          nickname_ = other.nickname_;
          avatar_ = other.avatar_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataItem Clone() {
          return new DataItem(this);
        }

        /// <summary>Field number for the "userId" field.</summary>
        public const int UserIdFieldNumber = 1;
        private long userId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long UserId {
          get { return userId_; }
          set {
            userId_ = value;
          }
        }

        /// <summary>Field number for the "nickname" field.</summary>
        public const int NicknameFieldNumber = 2;
        private string nickname_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Nickname {
          get { return nickname_; }
          set {
            nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avatar" field.</summary>
        public const int AvatarFieldNumber = 3;
        private string avatar_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Avatar {
          get { return avatar_; }
          set {
            avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DataItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DataItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UserId != other.UserId) return false;
          if (Nickname != other.Nickname) return false;
          if (Avatar != other.Avatar) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UserId != 0L) hash ^= UserId.GetHashCode();
          if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
          if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UserId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(UserId);
          }
          if (Nickname.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Nickname);
          }
          if (Avatar.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Avatar);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UserId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
          }
          if (Nickname.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
          }
          if (Avatar.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DataItem other) {
          if (other == null) {
            return;
          }
          if (other.UserId != 0L) {
            UserId = other.UserId;
          }
          if (other.Nickname.Length != 0) {
            Nickname = other.Nickname;
          }
          if (other.Avatar.Length != 0) {
            Avatar = other.Avatar;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                UserId = input.ReadInt64();
                break;
              }
              case 18: {
                Nickname = input.ReadString();
                break;
              }
              case 26: {
                Avatar = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class AddContactReq : pb::IMessage<AddContactReq> {
    private static readonly pb::MessageParser<AddContactReq> _parser = new pb::MessageParser<AddContactReq>(() => new AddContactReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddContactReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ContactReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddContactReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddContactReq(AddContactReq other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      authId_ = other.authId_;
      add_ = other.add_;
      userId_ = other.userId_;
      contactType_ = other.contactType_;
      setRemarks_ = other.setRemarks_;
      msg_ = other.msg_;
      fromGroupId_ = other.fromGroupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddContactReq Clone() {
      return new AddContactReq(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Protocol.ReqHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.ReqHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "authId" field.</summary>
    public const int AuthIdFieldNumber = 6;
    private long authId_;
    /// <summary>
    ///验证id 不为空时通过添加请求
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AuthId {
      get { return authId_; }
      set {
        authId_ = value;
      }
    }

    /// <summary>Field number for the "add" field.</summary>
    public const int AddFieldNumber = 8;
    private bool add_;
    /// <summary>
    ///是否通过
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Add {
      get { return add_; }
      set {
        add_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private long userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "contactType" field.</summary>
    public const int ContactTypeFieldNumber = 3;
    private int contactType_;
    /// <summary>
    ///添加类型 1=搜索 2=通讯录 3=推荐 4 群
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContactType {
      get { return contactType_; }
      set {
        contactType_ = value;
      }
    }

    /// <summary>Field number for the "setRemarks" field.</summary>
    public const int SetRemarksFieldNumber = 4;
    private string setRemarks_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SetRemarks {
      get { return setRemarks_; }
      set {
        setRemarks_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 5;
    private string msg_ = "";
    /// <summary>
    ///验证消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fromGroupId" field.</summary>
    public const int FromGroupIdFieldNumber = 7;
    private long fromGroupId_;
    /// <summary>
    ///通过群聊
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FromGroupId {
      get { return fromGroupId_; }
      set {
        fromGroupId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddContactReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddContactReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (AuthId != other.AuthId) return false;
      if (Add != other.Add) return false;
      if (UserId != other.UserId) return false;
      if (ContactType != other.ContactType) return false;
      if (SetRemarks != other.SetRemarks) return false;
      if (Msg != other.Msg) return false;
      if (FromGroupId != other.FromGroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (AuthId != 0L) hash ^= AuthId.GetHashCode();
      if (Add != false) hash ^= Add.GetHashCode();
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (ContactType != 0) hash ^= ContactType.GetHashCode();
      if (SetRemarks.Length != 0) hash ^= SetRemarks.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (FromGroupId != 0L) hash ^= FromGroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (UserId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UserId);
      }
      if (ContactType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ContactType);
      }
      if (SetRemarks.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SetRemarks);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Msg);
      }
      if (AuthId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(AuthId);
      }
      if (FromGroupId != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(FromGroupId);
      }
      if (Add != false) {
        output.WriteRawTag(64);
        output.WriteBool(Add);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (AuthId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AuthId);
      }
      if (Add != false) {
        size += 1 + 1;
      }
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (ContactType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContactType);
      }
      if (SetRemarks.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SetRemarks);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (FromGroupId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromGroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddContactReq other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Protocol.ReqHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.AuthId != 0L) {
        AuthId = other.AuthId;
      }
      if (other.Add != false) {
        Add = other.Add;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.ContactType != 0) {
        ContactType = other.ContactType;
      }
      if (other.SetRemarks.Length != 0) {
        SetRemarks = other.SetRemarks;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.FromGroupId != 0L) {
        FromGroupId = other.FromGroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Protocol.ReqHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 16: {
            UserId = input.ReadInt64();
            break;
          }
          case 24: {
            ContactType = input.ReadInt32();
            break;
          }
          case 34: {
            SetRemarks = input.ReadString();
            break;
          }
          case 42: {
            Msg = input.ReadString();
            break;
          }
          case 48: {
            AuthId = input.ReadInt64();
            break;
          }
          case 56: {
            FromGroupId = input.ReadInt64();
            break;
          }
          case 64: {
            Add = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddContactAck : pb::IMessage<AddContactAck> {
    private static readonly pb::MessageParser<AddContactAck> _parser = new pb::MessageParser<AddContactAck>(() => new AddContactAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddContactAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ContactReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddContactAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddContactAck(AddContactAck other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddContactAck Clone() {
      return new AddContactAck(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Protocol.AckHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.AckHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddContactAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddContactAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddContactAck other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Protocol.AckHeader();
        }
        Header.MergeFrom(other.Header);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Protocol.AckHeader();
            }
            input.ReadMessage(Header);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddContactNotify : pb::IMessage<AddContactNotify> {
    private static readonly pb::MessageParser<AddContactNotify> _parser = new pb::MessageParser<AddContactNotify>(() => new AddContactNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddContactNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ContactReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddContactNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddContactNotify(AddContactNotify other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      authId_ = other.authId_;
      nickname_ = other.nickname_;
      avatar_ = other.avatar_;
      msg_ = other.msg_;
      fromGroupId_ = other.fromGroupId_;
      contactType_ = other.contactType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddContactNotify Clone() {
      return new AddContactNotify(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Protocol.ReqHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.ReqHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "authId" field.</summary>
    public const int AuthIdFieldNumber = 2;
    private long authId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AuthId {
      get { return authId_; }
      set {
        authId_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 3;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 4;
    private string avatar_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Avatar {
      get { return avatar_; }
      set {
        avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 5;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fromGroupId" field.</summary>
    public const int FromGroupIdFieldNumber = 7;
    private long fromGroupId_;
    /// <summary>
    ///通过群聊
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FromGroupId {
      get { return fromGroupId_; }
      set {
        fromGroupId_ = value;
      }
    }

    /// <summary>Field number for the "contactType" field.</summary>
    public const int ContactTypeFieldNumber = 8;
    private int contactType_;
    /// <summary>
    ///添加类型 1=搜索 2=通讯录 3=推荐 4 群
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContactType {
      get { return contactType_; }
      set {
        contactType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddContactNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddContactNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (AuthId != other.AuthId) return false;
      if (Nickname != other.Nickname) return false;
      if (Avatar != other.Avatar) return false;
      if (Msg != other.Msg) return false;
      if (FromGroupId != other.FromGroupId) return false;
      if (ContactType != other.ContactType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (AuthId != 0L) hash ^= AuthId.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (FromGroupId != 0L) hash ^= FromGroupId.GetHashCode();
      if (ContactType != 0) hash ^= ContactType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (AuthId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(AuthId);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (Avatar.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Avatar);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Msg);
      }
      if (FromGroupId != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(FromGroupId);
      }
      if (ContactType != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ContactType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (AuthId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AuthId);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (Avatar.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (FromGroupId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromGroupId);
      }
      if (ContactType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContactType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddContactNotify other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Protocol.ReqHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.AuthId != 0L) {
        AuthId = other.AuthId;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.Avatar.Length != 0) {
        Avatar = other.Avatar;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.FromGroupId != 0L) {
        FromGroupId = other.FromGroupId;
      }
      if (other.ContactType != 0) {
        ContactType = other.ContactType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Protocol.ReqHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 16: {
            AuthId = input.ReadInt64();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
          case 34: {
            Avatar = input.ReadString();
            break;
          }
          case 42: {
            Msg = input.ReadString();
            break;
          }
          case 56: {
            FromGroupId = input.ReadInt64();
            break;
          }
          case 64: {
            ContactType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteContactReq : pb::IMessage<DeleteContactReq> {
    private static readonly pb::MessageParser<DeleteContactReq> _parser = new pb::MessageParser<DeleteContactReq>(() => new DeleteContactReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteContactReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ContactReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteContactReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteContactReq(DeleteContactReq other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      contactId_ = other.contactId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteContactReq Clone() {
      return new DeleteContactReq(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Protocol.ReqHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.ReqHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "contactId" field.</summary>
    public const int ContactIdFieldNumber = 2;
    private long contactId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ContactId {
      get { return contactId_; }
      set {
        contactId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteContactReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteContactReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (ContactId != other.ContactId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (ContactId != 0L) hash ^= ContactId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (ContactId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ContactId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (ContactId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ContactId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteContactReq other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Protocol.ReqHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.ContactId != 0L) {
        ContactId = other.ContactId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Protocol.ReqHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 16: {
            ContactId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteContactAck : pb::IMessage<DeleteContactAck> {
    private static readonly pb::MessageParser<DeleteContactAck> _parser = new pb::MessageParser<DeleteContactAck>(() => new DeleteContactAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteContactAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ContactReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteContactAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteContactAck(DeleteContactAck other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteContactAck Clone() {
      return new DeleteContactAck(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Protocol.AckHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.AckHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteContactAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteContactAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteContactAck other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Protocol.AckHeader();
        }
        Header.MergeFrom(other.Header);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Protocol.AckHeader();
            }
            input.ReadMessage(Header);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateContactReq : pb::IMessage<UpdateContactReq> {
    private static readonly pb::MessageParser<UpdateContactReq> _parser = new pb::MessageParser<UpdateContactReq>(() => new UpdateContactReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateContactReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ContactReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateContactReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateContactReq(UpdateContactReq other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      setRemarks_ = other.setRemarks_;
      contactId_ = other.contactId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateContactReq Clone() {
      return new UpdateContactReq(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Protocol.ReqHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.ReqHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "setRemarks" field.</summary>
    public const int SetRemarksFieldNumber = 2;
    private string setRemarks_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SetRemarks {
      get { return setRemarks_; }
      set {
        setRemarks_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contactId" field.</summary>
    public const int ContactIdFieldNumber = 3;
    private long contactId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ContactId {
      get { return contactId_; }
      set {
        contactId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateContactReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateContactReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (SetRemarks != other.SetRemarks) return false;
      if (ContactId != other.ContactId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (SetRemarks.Length != 0) hash ^= SetRemarks.GetHashCode();
      if (ContactId != 0L) hash ^= ContactId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (SetRemarks.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SetRemarks);
      }
      if (ContactId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ContactId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (SetRemarks.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SetRemarks);
      }
      if (ContactId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ContactId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateContactReq other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Protocol.ReqHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.SetRemarks.Length != 0) {
        SetRemarks = other.SetRemarks;
      }
      if (other.ContactId != 0L) {
        ContactId = other.ContactId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Protocol.ReqHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            SetRemarks = input.ReadString();
            break;
          }
          case 24: {
            ContactId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateContactAck : pb::IMessage<UpdateContactAck> {
    private static readonly pb::MessageParser<UpdateContactAck> _parser = new pb::MessageParser<UpdateContactAck>(() => new UpdateContactAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateContactAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ContactReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateContactAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateContactAck(UpdateContactAck other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateContactAck Clone() {
      return new UpdateContactAck(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Protocol.AckHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.AckHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateContactAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateContactAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateContactAck other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Protocol.AckHeader();
        }
        Header.MergeFrom(other.Header);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Protocol.AckHeader();
            }
            input.ReadMessage(Header);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetContactListReq : pb::IMessage<GetContactListReq> {
    private static readonly pb::MessageParser<GetContactListReq> _parser = new pb::MessageParser<GetContactListReq>(() => new GetContactListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetContactListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ContactReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetContactListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetContactListReq(GetContactListReq other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetContactListReq Clone() {
      return new GetContactListReq(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Protocol.ReqHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.ReqHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetContactListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetContactListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetContactListReq other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Protocol.ReqHeader();
        }
        Header.MergeFrom(other.Header);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Protocol.ReqHeader();
            }
            input.ReadMessage(Header);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetContactListAck : pb::IMessage<GetContactListAck> {
    private static readonly pb::MessageParser<GetContactListAck> _parser = new pb::MessageParser<GetContactListAck>(() => new GetContactListAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetContactListAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ContactReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetContactListAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetContactListAck(GetContactListAck other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      contacts_ = other.contacts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetContactListAck Clone() {
      return new GetContactListAck(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Protocol.AckHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.AckHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "contacts" field.</summary>
    public const int ContactsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Protocol.GetContactListAck.Types.Contact> _repeated_contacts_codec
        = pb::FieldCodec.ForMessage(18, global::Protocol.GetContactListAck.Types.Contact.Parser);
    private readonly pbc::RepeatedField<global::Protocol.GetContactListAck.Types.Contact> contacts_ = new pbc::RepeatedField<global::Protocol.GetContactListAck.Types.Contact>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.GetContactListAck.Types.Contact> Contacts {
      get { return contacts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetContactListAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetContactListAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if(!contacts_.Equals(other.contacts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      hash ^= contacts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      contacts_.WriteTo(output, _repeated_contacts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      size += contacts_.CalculateSize(_repeated_contacts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetContactListAck other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Protocol.AckHeader();
        }
        Header.MergeFrom(other.Header);
      }
      contacts_.Add(other.contacts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Protocol.AckHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            contacts_.AddEntriesFrom(input, _repeated_contacts_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetContactListAck message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Contact : pb::IMessage<Contact> {
        private static readonly pb::MessageParser<Contact> _parser = new pb::MessageParser<Contact>(() => new Contact());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Contact> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Protocol.GetContactListAck.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Contact() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Contact(Contact other) : this() {
          nickname_ = other.nickname_;
          avatar_ = other.avatar_;
          contactId_ = other.contactId_;
          remarks_ = other.remarks_;
          userId_ = other.userId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Contact Clone() {
          return new Contact(this);
        }

        /// <summary>Field number for the "nickname" field.</summary>
        public const int NicknameFieldNumber = 1;
        private string nickname_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Nickname {
          get { return nickname_; }
          set {
            nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avatar" field.</summary>
        public const int AvatarFieldNumber = 2;
        private string avatar_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Avatar {
          get { return avatar_; }
          set {
            avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "contactId" field.</summary>
        public const int ContactIdFieldNumber = 3;
        private long contactId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ContactId {
          get { return contactId_; }
          set {
            contactId_ = value;
          }
        }

        /// <summary>Field number for the "remarks" field.</summary>
        public const int RemarksFieldNumber = 4;
        private string remarks_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Remarks {
          get { return remarks_; }
          set {
            remarks_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "userId" field.</summary>
        public const int UserIdFieldNumber = 5;
        private long userId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long UserId {
          get { return userId_; }
          set {
            userId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Contact);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Contact other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Nickname != other.Nickname) return false;
          if (Avatar != other.Avatar) return false;
          if (ContactId != other.ContactId) return false;
          if (Remarks != other.Remarks) return false;
          if (UserId != other.UserId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
          if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
          if (ContactId != 0L) hash ^= ContactId.GetHashCode();
          if (Remarks.Length != 0) hash ^= Remarks.GetHashCode();
          if (UserId != 0L) hash ^= UserId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Nickname.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Nickname);
          }
          if (Avatar.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Avatar);
          }
          if (ContactId != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(ContactId);
          }
          if (Remarks.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Remarks);
          }
          if (UserId != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(UserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Nickname.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
          }
          if (Avatar.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
          }
          if (ContactId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ContactId);
          }
          if (Remarks.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Remarks);
          }
          if (UserId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Contact other) {
          if (other == null) {
            return;
          }
          if (other.Nickname.Length != 0) {
            Nickname = other.Nickname;
          }
          if (other.Avatar.Length != 0) {
            Avatar = other.Avatar;
          }
          if (other.ContactId != 0L) {
            ContactId = other.ContactId;
          }
          if (other.Remarks.Length != 0) {
            Remarks = other.Remarks;
          }
          if (other.UserId != 0L) {
            UserId = other.UserId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Nickname = input.ReadString();
                break;
              }
              case 18: {
                Avatar = input.ReadString();
                break;
              }
              case 24: {
                ContactId = input.ReadInt64();
                break;
              }
              case 34: {
                Remarks = input.ReadString();
                break;
              }
              case 40: {
                UserId = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
