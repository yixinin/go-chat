// Code generated by protoc-gen-go. DO NOT EDIT.
// source: room.proto

package protocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RoomUser struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	VideoPush            bool     `protobuf:"varint,5,opt,name=VideoPush,proto3" json:"VideoPush,omitempty"`
	AudioPush            bool     `protobuf:"varint,6,opt,name=AudioPush,proto3" json:"AudioPush,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomUser) Reset()         { *m = RoomUser{} }
func (m *RoomUser) String() string { return proto.CompactTextString(m) }
func (*RoomUser) ProtoMessage()    {}
func (*RoomUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5fd27dd97284ef4, []int{0}
}

func (m *RoomUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomUser.Unmarshal(m, b)
}
func (m *RoomUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomUser.Marshal(b, m, deterministic)
}
func (m *RoomUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomUser.Merge(m, src)
}
func (m *RoomUser) XXX_Size() int {
	return xxx_messageInfo_RoomUser.Size(m)
}
func (m *RoomUser) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomUser.DiscardUnknown(m)
}

var xxx_messageInfo_RoomUser proto.InternalMessageInfo

func (m *RoomUser) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *RoomUser) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RoomUser) GetVideoPush() bool {
	if m != nil {
		return m.VideoPush
	}
	return false
}

func (m *RoomUser) GetAudioPush() bool {
	if m != nil {
		return m.AudioPush
	}
	return false
}

type CreateRoomReq struct {
	Users                []*RoomUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Protocol             string      `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateRoomReq) Reset()         { *m = CreateRoomReq{} }
func (m *CreateRoomReq) String() string { return proto.CompactTextString(m) }
func (*CreateRoomReq) ProtoMessage()    {}
func (*CreateRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5fd27dd97284ef4, []int{1}
}

func (m *CreateRoomReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRoomReq.Unmarshal(m, b)
}
func (m *CreateRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRoomReq.Marshal(b, m, deterministic)
}
func (m *CreateRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRoomReq.Merge(m, src)
}
func (m *CreateRoomReq) XXX_Size() int {
	return xxx_messageInfo_CreateRoomReq.Size(m)
}
func (m *CreateRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRoomReq proto.InternalMessageInfo

func (m *CreateRoomReq) GetUsers() []*RoomUser {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *CreateRoomReq) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

type CreateRoomAck struct {
	RoomId               int32    `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	TcpAddr              string   `protobuf:"bytes,2,opt,name=tcpAddr,proto3" json:"tcpAddr,omitempty"`
	WsAddr               string   `protobuf:"bytes,3,opt,name=wsAddr,proto3" json:"wsAddr,omitempty"`
	HttpAddr             string   `protobuf:"bytes,4,opt,name=httpAddr,proto3" json:"httpAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRoomAck) Reset()         { *m = CreateRoomAck{} }
func (m *CreateRoomAck) String() string { return proto.CompactTextString(m) }
func (*CreateRoomAck) ProtoMessage()    {}
func (*CreateRoomAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5fd27dd97284ef4, []int{2}
}

func (m *CreateRoomAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRoomAck.Unmarshal(m, b)
}
func (m *CreateRoomAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRoomAck.Marshal(b, m, deterministic)
}
func (m *CreateRoomAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRoomAck.Merge(m, src)
}
func (m *CreateRoomAck) XXX_Size() int {
	return xxx_messageInfo_CreateRoomAck.Size(m)
}
func (m *CreateRoomAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRoomAck.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRoomAck proto.InternalMessageInfo

func (m *CreateRoomAck) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *CreateRoomAck) GetTcpAddr() string {
	if m != nil {
		return m.TcpAddr
	}
	return ""
}

func (m *CreateRoomAck) GetWsAddr() string {
	if m != nil {
		return m.WsAddr
	}
	return ""
}

func (m *CreateRoomAck) GetHttpAddr() string {
	if m != nil {
		return m.HttpAddr
	}
	return ""
}

type JoinRoomReq struct {
	Header               *CallAckHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	User                 *RoomUser      `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	RoomId               int32          `protobuf:"varint,3,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Protocol             string         `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Addr                 string         `protobuf:"bytes,5,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *JoinRoomReq) Reset()         { *m = JoinRoomReq{} }
func (m *JoinRoomReq) String() string { return proto.CompactTextString(m) }
func (*JoinRoomReq) ProtoMessage()    {}
func (*JoinRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5fd27dd97284ef4, []int{3}
}

func (m *JoinRoomReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRoomReq.Unmarshal(m, b)
}
func (m *JoinRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRoomReq.Marshal(b, m, deterministic)
}
func (m *JoinRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRoomReq.Merge(m, src)
}
func (m *JoinRoomReq) XXX_Size() int {
	return xxx_messageInfo_JoinRoomReq.Size(m)
}
func (m *JoinRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRoomReq proto.InternalMessageInfo

func (m *JoinRoomReq) GetHeader() *CallAckHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *JoinRoomReq) GetUser() *RoomUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *JoinRoomReq) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *JoinRoomReq) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *JoinRoomReq) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type JoinRoomAck struct {
	Header               *CallAckHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Addr                 string         `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *JoinRoomAck) Reset()         { *m = JoinRoomAck{} }
func (m *JoinRoomAck) String() string { return proto.CompactTextString(m) }
func (*JoinRoomAck) ProtoMessage()    {}
func (*JoinRoomAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5fd27dd97284ef4, []int{4}
}

func (m *JoinRoomAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRoomAck.Unmarshal(m, b)
}
func (m *JoinRoomAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRoomAck.Marshal(b, m, deterministic)
}
func (m *JoinRoomAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRoomAck.Merge(m, src)
}
func (m *JoinRoomAck) XXX_Size() int {
	return xxx_messageInfo_JoinRoomAck.Size(m)
}
func (m *JoinRoomAck) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRoomAck.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRoomAck proto.InternalMessageInfo

func (m *JoinRoomAck) GetHeader() *CallAckHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *JoinRoomAck) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type LeaveRoomReq struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	RoomId               int32    `protobuf:"varint,2,opt,name=roomId,proto3" json:"roomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaveRoomReq) Reset()         { *m = LeaveRoomReq{} }
func (m *LeaveRoomReq) String() string { return proto.CompactTextString(m) }
func (*LeaveRoomReq) ProtoMessage()    {}
func (*LeaveRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5fd27dd97284ef4, []int{5}
}

func (m *LeaveRoomReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveRoomReq.Unmarshal(m, b)
}
func (m *LeaveRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveRoomReq.Marshal(b, m, deterministic)
}
func (m *LeaveRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveRoomReq.Merge(m, src)
}
func (m *LeaveRoomReq) XXX_Size() int {
	return xxx_messageInfo_LeaveRoomReq.Size(m)
}
func (m *LeaveRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveRoomReq proto.InternalMessageInfo

func (m *LeaveRoomReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *LeaveRoomReq) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

//最后倒数第二个人离开房间时解散
type LeaveRoomAck struct {
	Header               *CallAckHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *LeaveRoomAck) Reset()         { *m = LeaveRoomAck{} }
func (m *LeaveRoomAck) String() string { return proto.CompactTextString(m) }
func (*LeaveRoomAck) ProtoMessage()    {}
func (*LeaveRoomAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5fd27dd97284ef4, []int{6}
}

func (m *LeaveRoomAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveRoomAck.Unmarshal(m, b)
}
func (m *LeaveRoomAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveRoomAck.Marshal(b, m, deterministic)
}
func (m *LeaveRoomAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveRoomAck.Merge(m, src)
}
func (m *LeaveRoomAck) XXX_Size() int {
	return xxx_messageInfo_LeaveRoomAck.Size(m)
}
func (m *LeaveRoomAck) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveRoomAck.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveRoomAck proto.InternalMessageInfo

func (m *LeaveRoomAck) GetHeader() *CallAckHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

//互相请求 中断通话/标记房间解散
type DiscardRoomReq struct {
	RoomId               int32    `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscardRoomReq) Reset()         { *m = DiscardRoomReq{} }
func (m *DiscardRoomReq) String() string { return proto.CompactTextString(m) }
func (*DiscardRoomReq) ProtoMessage()    {}
func (*DiscardRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5fd27dd97284ef4, []int{7}
}

func (m *DiscardRoomReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscardRoomReq.Unmarshal(m, b)
}
func (m *DiscardRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscardRoomReq.Marshal(b, m, deterministic)
}
func (m *DiscardRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardRoomReq.Merge(m, src)
}
func (m *DiscardRoomReq) XXX_Size() int {
	return xxx_messageInfo_DiscardRoomReq.Size(m)
}
func (m *DiscardRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardRoomReq proto.InternalMessageInfo

func (m *DiscardRoomReq) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

type DiscardRoomAck struct {
	Header               *CallAckHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DiscardRoomAck) Reset()         { *m = DiscardRoomAck{} }
func (m *DiscardRoomAck) String() string { return proto.CompactTextString(m) }
func (*DiscardRoomAck) ProtoMessage()    {}
func (*DiscardRoomAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5fd27dd97284ef4, []int{8}
}

func (m *DiscardRoomAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscardRoomAck.Unmarshal(m, b)
}
func (m *DiscardRoomAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscardRoomAck.Marshal(b, m, deterministic)
}
func (m *DiscardRoomAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardRoomAck.Merge(m, src)
}
func (m *DiscardRoomAck) XXX_Size() int {
	return xxx_messageInfo_DiscardRoomAck.Size(m)
}
func (m *DiscardRoomAck) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardRoomAck.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardRoomAck proto.InternalMessageInfo

func (m *DiscardRoomAck) GetHeader() *CallAckHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func init() {
	proto.RegisterType((*RoomUser)(nil), "protocol.RoomUser")
	proto.RegisterType((*CreateRoomReq)(nil), "protocol.CreateRoomReq")
	proto.RegisterType((*CreateRoomAck)(nil), "protocol.CreateRoomAck")
	proto.RegisterType((*JoinRoomReq)(nil), "protocol.JoinRoomReq")
	proto.RegisterType((*JoinRoomAck)(nil), "protocol.JoinRoomAck")
	proto.RegisterType((*LeaveRoomReq)(nil), "protocol.LeaveRoomReq")
	proto.RegisterType((*LeaveRoomAck)(nil), "protocol.LeaveRoomAck")
	proto.RegisterType((*DiscardRoomReq)(nil), "protocol.DiscardRoomReq")
	proto.RegisterType((*DiscardRoomAck)(nil), "protocol.DiscardRoomAck")
}

func init() { proto.RegisterFile("room.proto", fileDescriptor_c5fd27dd97284ef4) }

var fileDescriptor_c5fd27dd97284ef4 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x52, 0xcd, 0x8e, 0x94, 0x40,
	0x10, 0x96, 0x99, 0x61, 0x64, 0x8a, 0xd5, 0x98, 0x8a, 0xae, 0x84, 0x78, 0x98, 0xf4, 0xc1, 0x70,
	0x1a, 0x13, 0xbc, 0x18, 0x13, 0xa3, 0x04, 0x0f, 0x6a, 0x3c, 0x98, 0x36, 0xeb, 0x1d, 0xa1, 0x13,
	0x08, 0xb3, 0xd3, 0x6b, 0x03, 0xeb, 0x63, 0xf8, 0x26, 0xbe, 0x89, 0xef, 0x64, 0xba, 0x9b, 0xa6,
	0x9b, 0x88, 0x07, 0x37, 0x26, 0x7b, 0x82, 0xaa, 0xaf, 0x7e, 0xbe, 0xef, 0xeb, 0x02, 0x10, 0x9c,
	0x5f, 0x1e, 0xae, 0x04, 0xef, 0x39, 0x06, 0xea, 0x53, 0xf2, 0x63, 0x7c, 0x56, 0xb3, 0xa2, 0x62,
	0x42, 0xe7, 0xc9, 0x09, 0x02, 0xca, 0xf9, 0xe5, 0x45, 0xc7, 0x04, 0x3e, 0x80, 0xf5, 0xd0, 0x54,
	0x91, 0xb7, 0xf7, 0x92, 0x1d, 0x95, 0xbf, 0xf8, 0x10, 0xfc, 0x9e, 0xb7, 0xec, 0x14, 0xad, 0x54,
	0x4e, 0x07, 0xf8, 0x04, 0x76, 0x5f, 0x9a, 0x8a, 0xf1, 0x4f, 0x43, 0x57, 0x47, 0xfe, 0xde, 0x4b,
	0x02, 0x6a, 0x13, 0x12, 0xcd, 0x86, 0xaa, 0xd1, 0xe8, 0x56, 0xa3, 0x53, 0x82, 0x5c, 0xc0, 0xbd,
	0x5c, 0xb0, 0xa2, 0x67, 0x72, 0x2b, 0x65, 0xdf, 0x30, 0x01, 0x7f, 0xe8, 0x98, 0xe8, 0x22, 0x6f,
	0xbf, 0x4e, 0xc2, 0x14, 0x0f, 0x86, 0xe8, 0xc1, 0xf0, 0xa2, 0xba, 0x00, 0x63, 0x98, 0x44, 0x8c,
	0x7c, 0xa6, 0x98, 0x0c, 0xee, 0xd8, 0xac, 0x6c, 0xf1, 0x1c, 0xb6, 0x52, 0xfd, 0x7b, 0x2d, 0xc7,
	0xa7, 0x63, 0x84, 0x11, 0xdc, 0xed, 0xcb, 0xab, 0xac, 0xaa, 0xc4, 0x38, 0xc3, 0x84, 0xb2, 0xe3,
	0x7b, 0xa7, 0x80, 0xb5, 0x02, 0xc6, 0x48, 0xae, 0xad, 0xfb, 0x5e, 0xb7, 0x6c, 0xf4, 0x5a, 0x13,
	0x93, 0x9f, 0x1e, 0x84, 0x1f, 0x78, 0x73, 0x32, 0x62, 0x9e, 0xc1, 0x56, 0xbb, 0xab, 0xb6, 0x86,
	0xe9, 0x63, 0xab, 0x26, 0x2f, 0x8e, 0xc7, 0xac, 0x6c, 0xdf, 0x29, 0x98, 0x8e, 0x65, 0xf8, 0x14,
	0x36, 0x52, 0x9c, 0xe2, 0xb2, 0x2c, 0x5e, 0xe1, 0x8e, 0x9c, 0xf5, 0x4c, 0x8e, 0xeb, 0xc9, 0x66,
	0xee, 0x09, 0x22, 0x6c, 0x0a, 0x49, 0xda, 0x57, 0x79, 0xf5, 0x4f, 0xa8, 0xe5, 0x2b, 0x5d, 0xfa,
	0x67, 0xbe, 0x66, 0xe6, 0xca, 0x99, 0xf9, 0x02, 0xce, 0x3e, 0xb2, 0xe2, 0x7a, 0x7a, 0xd1, 0x3f,
	0xcf, 0xc8, 0xb2, 0x5f, 0xb9, 0xec, 0xc9, 0x6b, 0xa7, 0xf3, 0x26, 0x74, 0x48, 0x02, 0xf7, 0xdf,
	0x36, 0x5d, 0x59, 0x88, 0xca, 0x2c, 0xff, 0xcb, 0xbb, 0x93, 0x6c, 0x56, 0x79, 0x93, 0x65, 0xe9,
	0x8f, 0x15, 0x84, 0xb2, 0xf9, 0x33, 0x13, 0xd7, 0x4d, 0xc9, 0xf0, 0x0d, 0x80, 0xbd, 0x39, 0x74,
	0xdb, 0xdd, 0x03, 0x8f, 0x17, 0x81, 0xac, 0x6c, 0xc9, 0x1d, 0x7c, 0x09, 0x81, 0x79, 0x0d, 0x7c,
	0x64, 0xcb, 0x9c, 0x8b, 0x8a, 0x17, 0xd2, 0xba, 0xf7, 0x15, 0xec, 0x26, 0xef, 0xf0, 0xdc, 0x56,
	0xb9, 0x4f, 0x11, 0x2f, 0xe5, 0x75, 0x7b, 0x0e, 0xa1, 0xe3, 0x07, 0x46, 0xb6, 0x70, 0x6e, 0x68,
	0xbc, 0x8c, 0xa8, 0x21, 0xe9, 0x2f, 0x0f, 0xc2, 0xbc, 0x2e, 0x7a, 0xe3, 0xc8, 0xff, 0x18, 0x7a,
	0x8b, 0xa6, 0x7c, 0xdd, 0x2a, 0xe0, 0xf9, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x90, 0xaf,
	0x11, 0x39, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RoomServiceClient is the client API for RoomService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoomServiceClient interface {
	//创建房间
	CreateRoom(ctx context.Context, in *CreateRoomReq, opts ...grpc.CallOption) (*CreateRoomAck, error)
	//加入通话
	JoinRoom(ctx context.Context, in *JoinRoomReq, opts ...grpc.CallOption) (*JoinRoomAck, error)
	//挂断 当挂断至房间只有一个人时 解散房间
	LeaveRoom(ctx context.Context, in *LeaveRoomReq, opts ...grpc.CallOption) (*LeaveRoomAck, error)
	//强制中断通话
	DiscardRoom(ctx context.Context, in *DiscardRoomReq, opts ...grpc.CallOption) (*DiscardRoomAck, error)
}

type roomServiceClient struct {
	cc *grpc.ClientConn
}

func NewRoomServiceClient(cc *grpc.ClientConn) RoomServiceClient {
	return &roomServiceClient{cc}
}

func (c *roomServiceClient) CreateRoom(ctx context.Context, in *CreateRoomReq, opts ...grpc.CallOption) (*CreateRoomAck, error) {
	out := new(CreateRoomAck)
	err := c.cc.Invoke(ctx, "/protocol.RoomService/CreateRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) JoinRoom(ctx context.Context, in *JoinRoomReq, opts ...grpc.CallOption) (*JoinRoomAck, error) {
	out := new(JoinRoomAck)
	err := c.cc.Invoke(ctx, "/protocol.RoomService/JoinRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) LeaveRoom(ctx context.Context, in *LeaveRoomReq, opts ...grpc.CallOption) (*LeaveRoomAck, error) {
	out := new(LeaveRoomAck)
	err := c.cc.Invoke(ctx, "/protocol.RoomService/LeaveRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) DiscardRoom(ctx context.Context, in *DiscardRoomReq, opts ...grpc.CallOption) (*DiscardRoomAck, error) {
	out := new(DiscardRoomAck)
	err := c.cc.Invoke(ctx, "/protocol.RoomService/DiscardRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoomServiceServer is the server API for RoomService service.
type RoomServiceServer interface {
	//创建房间
	CreateRoom(context.Context, *CreateRoomReq) (*CreateRoomAck, error)
	//加入通话
	JoinRoom(context.Context, *JoinRoomReq) (*JoinRoomAck, error)
	//挂断 当挂断至房间只有一个人时 解散房间
	LeaveRoom(context.Context, *LeaveRoomReq) (*LeaveRoomAck, error)
	//强制中断通话
	DiscardRoom(context.Context, *DiscardRoomReq) (*DiscardRoomAck, error)
}

// UnimplementedRoomServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRoomServiceServer struct {
}

func (*UnimplementedRoomServiceServer) CreateRoom(ctx context.Context, req *CreateRoomReq) (*CreateRoomAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRoom not implemented")
}
func (*UnimplementedRoomServiceServer) JoinRoom(ctx context.Context, req *JoinRoomReq) (*JoinRoomAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinRoom not implemented")
}
func (*UnimplementedRoomServiceServer) LeaveRoom(ctx context.Context, req *LeaveRoomReq) (*LeaveRoomAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LeaveRoom not implemented")
}
func (*UnimplementedRoomServiceServer) DiscardRoom(ctx context.Context, req *DiscardRoomReq) (*DiscardRoomAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiscardRoom not implemented")
}

func RegisterRoomServiceServer(s *grpc.Server, srv RoomServiceServer) {
	s.RegisterService(&_RoomService_serviceDesc, srv)
}

func _RoomService_CreateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).CreateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RoomService/CreateRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).CreateRoom(ctx, req.(*CreateRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_JoinRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).JoinRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RoomService/JoinRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).JoinRoom(ctx, req.(*JoinRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_LeaveRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaveRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).LeaveRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RoomService/LeaveRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).LeaveRoom(ctx, req.(*LeaveRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_DiscardRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscardRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).DiscardRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RoomService/DiscardRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).DiscardRoom(ctx, req.(*DiscardRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoomService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.RoomService",
	HandlerType: (*RoomServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRoom",
			Handler:    _RoomService_CreateRoom_Handler,
		},
		{
			MethodName: "JoinRoom",
			Handler:    _RoomService_JoinRoom_Handler,
		},
		{
			MethodName: "LeaveRoom",
			Handler:    _RoomService_LeaveRoom_Handler,
		},
		{
			MethodName: "DiscardRoom",
			Handler:    _RoomService_DiscardRoom_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "room.proto",
}

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	//解散房间
	DiscardRoom(ctx context.Context, in *DiscardRoomReq, opts ...grpc.CallOption) (*DiscardRoomAck, error)
	//加入通话
	JoinRoom(ctx context.Context, in *JoinRoomReq, opts ...grpc.CallOption) (*JoinRoomAck, error)
	//挂断 当挂断至房间只有一个人时 解散房间
	LeaveRoom(ctx context.Context, in *LeaveRoomReq, opts ...grpc.CallOption) (*LeaveRoomAck, error)
}

type chatServiceClient struct {
	cc *grpc.ClientConn
}

func NewChatServiceClient(cc *grpc.ClientConn) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) DiscardRoom(ctx context.Context, in *DiscardRoomReq, opts ...grpc.CallOption) (*DiscardRoomAck, error) {
	out := new(DiscardRoomAck)
	err := c.cc.Invoke(ctx, "/protocol.ChatService/DiscardRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) JoinRoom(ctx context.Context, in *JoinRoomReq, opts ...grpc.CallOption) (*JoinRoomAck, error) {
	out := new(JoinRoomAck)
	err := c.cc.Invoke(ctx, "/protocol.ChatService/JoinRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) LeaveRoom(ctx context.Context, in *LeaveRoomReq, opts ...grpc.CallOption) (*LeaveRoomAck, error) {
	out := new(LeaveRoomAck)
	err := c.cc.Invoke(ctx, "/protocol.ChatService/LeaveRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	//解散房间
	DiscardRoom(context.Context, *DiscardRoomReq) (*DiscardRoomAck, error)
	//加入通话
	JoinRoom(context.Context, *JoinRoomReq) (*JoinRoomAck, error)
	//挂断 当挂断至房间只有一个人时 解散房间
	LeaveRoom(context.Context, *LeaveRoomReq) (*LeaveRoomAck, error)
}

// UnimplementedChatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChatServiceServer struct {
}

func (*UnimplementedChatServiceServer) DiscardRoom(ctx context.Context, req *DiscardRoomReq) (*DiscardRoomAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiscardRoom not implemented")
}
func (*UnimplementedChatServiceServer) JoinRoom(ctx context.Context, req *JoinRoomReq) (*JoinRoomAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinRoom not implemented")
}
func (*UnimplementedChatServiceServer) LeaveRoom(ctx context.Context, req *LeaveRoomReq) (*LeaveRoomAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LeaveRoom not implemented")
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_DiscardRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscardRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).DiscardRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ChatService/DiscardRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).DiscardRoom(ctx, req.(*DiscardRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_JoinRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).JoinRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ChatService/JoinRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).JoinRoom(ctx, req.(*JoinRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_LeaveRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaveRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).LeaveRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ChatService/LeaveRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).LeaveRoom(ctx, req.(*LeaveRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.ChatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DiscardRoom",
			Handler:    _ChatService_DiscardRoom_Handler,
		},
		{
			MethodName: "JoinRoom",
			Handler:    _ChatService_JoinRoom_Handler,
		},
		{
			MethodName: "LeaveRoom",
			Handler:    _ChatService_LeaveRoom_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "room.proto",
}
